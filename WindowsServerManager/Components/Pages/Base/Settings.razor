@page "/settings"
@using WindowsServerManager.Libraries.Utilities.Expanders
<DashLayout>
    <MudAlert ContentAlignment="HorizontalAlignment.Center" Severity="Severity.Info" Elevation="12" Variant="Variant.Filled">Settings are saved automatically, and applied on restart!</MudAlert>
    <MudExpansionPanels MultiExpansion="true" Square="true" Dense="true">
        <MudExpansionPanel Style="border: #ffffff; border: rgba(255, 255, 255, .1); border-width: .2px; border-style: solid" Expanded="true" Dense="true">
            <TitleContent>
                <MudText><i class="fa-solid fa-rectangle-list"></i>&nbsp;System Settings</MudText>
            </TitleContent>
            <ChildContent>
                <MudPaper Class="ma-2 pa-2">
                    <MudGrid Justify="Justify.Center">  
                        <MudItem xs="6">
                            <MudPaper Class="pa-4 ma-2" Outlined Square>
                                <MudStack>
                                    <MudNumericField InputMode="InputMode.numeric" @bind-Value="UpdateRecheckTimeMinutes" T="int" Label="Update recheck time in minutes(Default: 30)" Placeholder="30" Variant="Variant.Outlined" />
                                    <MudSwitch @bind-Value:after="OnValueChanged" @bind-Value="EnableSystemUpdateChecker" UncheckedColor="Color.Error" Color="Color.Primary" Label="Enable System Update Checker" T="bool"></MudSwitch>
                                    <MudSwitch @bind-Value:after="OnValueChanged" @bind-Value="EnableSoftwareUpdateChecker" UncheckedColor="Color.Error" Color="Color.Primary" Label="Enable Software Update Checker" T="bool"></MudSwitch>
                                </MudStack>
                            </MudPaper>
                        </MudItem>  
                        <MudItem xs="6">
                            <MudPaper Class="pa-4 ma-2" Outlined Square>
                                <MudStack>
                                    <MudSwitch @bind-Value:after="OnValueChanged" @bind-Value="EnableDockerManagement" UncheckedColor="Color.Error" Color="Color.Primary" Label="Enable Docker Management" T="bool"></MudSwitch>
                                    <MudSwitch @bind-Value:after="OnValueChanged" @bind-Value="EnableHyperVManagement" UncheckedColor="Color.Error" Color="Color.Primary" Label="Enable HyperV Management" T="bool"></MudSwitch>
                                </MudStack>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="12">
                            <MudPaper Class="pa-4 ma-2" Outlined Square>
                                <MudStack>
                                    <MudSwitch @bind-Value:after="OnValueChanged" @bind-Value="EventViewerNotifications" UncheckedColor="Color.Error" Color="Color.Primary" Label="System Events Notifications" T="bool"></MudSwitch>
                                    <MudNumericField @bind-Value="EventViewerRecheckTimeMinutes" InputMode="InputMode.numeric" T="int" Label="Recheck time in minutes(Default: 30)" Placeholder="30" Variant="Variant.Outlined" />
                                    <MudStack Row="true" Spacing="1">
                                        <MudCheckBox @bind-Value="BugCheck" @bind-Value:after="OnValueChanged" T="bool" UncheckedColor="Color.Error" Color="Color.Primary" Label="BugCheck" />
                                        <MudCheckBox @bind-Value="Disk" @bind-Value:after="OnValueChanged" T="bool" UncheckedColor="Color.Error" Color="Color.Primary" Label="Disk" />
                                    </MudStack> 
                                </MudStack>
                            </MudPaper>
                        </MudItem>
                    </MudGrid>
                </MudPaper>
            </ChildContent>
        </MudExpansionPanel>
        <MudExpansionPanel Style="border: #ffffff; border: rgba(255, 255, 255, .1); border-width: .2px; border-style: solid" Expanded="true" Dense="true">
            <TitleContent>
                <MudText><i class="fa-brands fa-docker"></i>&nbsp;Arr Settings</MudText>
            </TitleContent>
            <ChildContent>
                <MudPaper Class="ma-2 pa-2">
                    <MudGrid Justify="Justify.Center">
                        <MudItem xs="4">
                            <MudPaper Class="pa-4 ma-2" Outlined Square> 
                                <MudStack>
                                    <MudSwitch @bind-Value:after="OnValueChanged" @bind-Value="SonarrEnabled" UncheckedColor="Color.Error" Color="Color.Primary" Label="Sonarr Enabled" T="bool"/>
                                    <MudTextField TextChanged="OnValueChanged" @bind-Value="SonarrUrl" Immediate="true" T="string" Label="Sonarr Url" Variant="Variant.Outlined" />
                                    <MudTextField TextChanged="OnValueChanged" @bind-Value="SonarrApiKey" Immediate="true" T="string" Label="Sonarr Api Key" Variant="Variant.Outlined" />
                                </MudStack>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="4">
                            <MudPaper Class="pa-4 ma-2" Outlined Square>
                                <MudStack>
                                    <MudSwitch @bind-Value:after="OnValueChanged" @bind-Value="RadarrEnabled" UncheckedColor="Color.Error" Color="Color.Primary" Label="Radarr Enabled" T="bool"/>
                                    <MudTextField TextChanged="OnValueChanged" @bind-Value="RadarrUrl" Immediate="true" T="string" Label="Radarr Url" Variant="Variant.Outlined" />
                                    <MudTextField TextChanged="OnValueChanged" @bind-Value="RadarrApiKey" Immediate="true" T="string" Label="Radarr Api Key" Variant="Variant.Outlined" />
                                </MudStack>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="4">
                            <MudPaper Class="pa-4 ma-2" Outlined Square>
                                <MudStack>
                                    <MudSwitch @bind-Value:after="OnValueChanged" @bind-Value="ProwlarrEnabled" UncheckedColor="Color.Error" Color="Color.Primary" Label="Prowlarr Enabled" T="bool"/>
                                    <MudTextField TextChanged="OnValueChanged" @bind-Value="ProwlarrUrl" Immediate="true" T="string" Label="Prowlarr Url" Variant="Variant.Outlined" />
                                    <MudTextField TextChanged="OnValueChanged" @bind-Value="ProwlarrApiKey" Immediate="true" T="string" Label="Prowlarr Api Key" Variant="Variant.Outlined" />
                                </MudStack>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="4">
                            <MudPaper Class="pa-4 ma-2" Outlined Square>
                                <MudStack>
                                    <MudSwitch @bind-Value:after="OnValueChanged" @bind-Value="QBitTorrentEnabled" UncheckedColor="Color.Error" Color="Color.Primary" Label="qBitTorrent Enabled" T="bool"/>
                                    <MudTextField TextChanged="OnValueChanged" @bind-Value="QBitTorrentUrl" Immediate="true" T="string" Label="qBitTorret Url" Variant="Variant.Outlined" />
                                    <MudTextField TextChanged="OnValueChanged" @bind-Value="QBitTorrentUsername" Immediate="true" T="string" Label="qBitTorrent Username" Variant="Variant.Outlined" />
                                    <MudTextField TextChanged="OnValueChanged" @bind-Value="QBitTorrentPassword" Immediate="true" T="string" Label="qBitTorrent Password" Variant="Variant.Outlined" />
                                </MudStack>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="4">
                            <MudPaper Class="pa-4 ma-2" Outlined Square>
                                <MudStack>
                                    <MudSwitch @bind-Value:after="OnValueChanged" @bind-Value="BazaarEnabled" UncheckedColor="Color.Error" Color="Color.Primary" Label="Bazaar Enabled" T="bool"/>
                                    <MudTextField TextChanged="OnValueChanged" @bind-Value="BazaarUrl" Immediate="true" T="string" Label="Bazaar Url" Variant="Variant.Outlined" />
                                    <MudTextField TextChanged="OnValueChanged" @bind-Value="BazaarApiKey" Immediate="true" T="string" Label="Bazaar Api Key" Variant="Variant.Outlined" />
                                </MudStack>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="4">
                            <MudPaper Class="pa-4 ma-2" Outlined Square>
                                <MudStack>
                                    <MudSwitch @bind-Value:after="OnValueChanged" @bind-Value="WhisparrEnabled" UncheckedColor="Color.Error" Color="Color.Primary" Label="Whisparr Enabled" T="bool"/>
                                    <MudTextField TextChanged="OnValueChanged" @bind-Value="WhisparrUrl" Immediate="true" T="string" Label="Whisparr Url" Variant="Variant.Outlined" />
                                    <MudTextField TextChanged="OnValueChanged" @bind-Value="WhisparrApiKey" Immediate="true" T="string" Label="Whisparr Api Key" Variant="Variant.Outlined" />
                                </MudStack>
                            </MudPaper>
                        </MudItem>
                    </MudGrid>
                </MudPaper>
            </ChildContent>
        </MudExpansionPanel>
    </MudExpansionPanels>
</DashLayout>

@code{
    // System Update
    public int UpdateRecheckTimeMinutes { get; set; } = Program.Settings?.UpdateSettings.UpdateRecheckTimeMinutes ?? 30;
    public bool EnableSystemUpdateChecker { get; set; } = Program.Settings?.UpdateSettings.EnableSystemUpdateChecker ?? false;
    public bool EnableSoftwareUpdateChecker { get; set; } = Program.Settings?.UpdateSettings.EnableSoftwareUpdateChecker ?? false;

    // VM Settings
    public bool EnableDockerManagement { get; set; } = Program.Settings?.VmSettings.EnableDockerManagement ?? false;
    public bool EnableHyperVManagement { get; set; } = Program.Settings?.VmSettings.EnableHyperVManagement ?? false;

    // Event Viewer
    public bool EventViewerNotifications { get; set; } = Program.Settings?.EventViewerSettings.Enabled ?? false;
    public int EventViewerRecheckTimeMinutes { get; set; } = Program.Settings?.EventViewerSettings.RecheckTimeMinutes ?? 60;
    public bool BugCheck { get; set; } = Program.Settings?.EventViewerSettings.ViewerOptions?.BugCheck ?? false;
    public bool Disk { get; set; } = Program.Settings?.EventViewerSettings.ViewerOptions?.Disk ?? false;

    // Arr Settings
    public bool SonarrEnabled { get; set; } = Program.Settings?.ArrSuite.Sonarr?.Enabled ?? false;
    public string SonarrUrl { get; set; } = Program.Settings?.ArrSuite.Sonarr?.Url ?? "";
    public string SonarrApiKey { get; set; } = Program.Settings?.ArrSuite.Sonarr?.ApiKey ?? "";

    public bool RadarrEnabled { get; set; } = Program.Settings?.ArrSuite.Radarr?.Enabled ?? false;
    public string RadarrUrl { get; set; } = Program.Settings?.ArrSuite.Radarr?.Url ?? "";
    public string RadarrApiKey { get; set; } = Program.Settings?.ArrSuite.Radarr?.ApiKey ?? "";

    public bool ProwlarrEnabled { get; set; } = Program.Settings?.ArrSuite.Prowlarr?.Enabled ?? false;
    public string ProwlarrUrl { get; set; } = Program.Settings?.ArrSuite.Prowlarr?.Url ?? "";
    public string ProwlarrApiKey { get; set; } = Program.Settings?.ArrSuite.Prowlarr?.ApiKey ?? "";

    public bool QBitTorrentEnabled { get; set; } = Program.Settings?.ArrSuite.QBitTorrent?.Enabled ?? false;
    public string QBitTorrentUrl { get; set; } = Program.Settings?.ArrSuite.QBitTorrent?.Url ?? "";
    public string QBitTorrentUsername { get; set; } = Program.Settings?.ArrSuite.QBitTorrent?.Username ?? "";
    public string QBitTorrentPassword { get; set; } = Program.Settings?.ArrSuite.QBitTorrent?.Password ?? "";

    public bool BazaarEnabled { get; set; } = Program.Settings?.ArrSuite.Bazaar?.Enabled ?? false;
    public string BazaarUrl { get; set; } = Program.Settings?.ArrSuite.Bazaar?.Url ?? "";
    public string BazaarApiKey { get; set; } = Program.Settings?.ArrSuite.Bazaar?.ApiKey ?? "";

    public bool WhisparrEnabled { get; set; } = Program.Settings?.ArrSuite.Whisparr?.Enabled ?? false;
    public string WhisparrUrl { get; set; } = Program.Settings?.ArrSuite.Whisparr?.Url ?? "";
    public string WhisparrApiKey { get; set; } = Program.Settings?.ArrSuite.Whisparr?.ApiKey ?? "";

    public void OnValueChanged()
    {
        // Create the updated Settings object
        WindowsServerManager.Settings updatedSettings = new (
            new UpdateSettings(UpdateRecheckTimeMinutes, EnableSystemUpdateChecker, EnableSoftwareUpdateChecker),
            new VmSettings(EnableDockerManagement, EnableHyperVManagement),
            new EventViewerSettings(EventViewerNotifications, EventViewerRecheckTimeMinutes, new EventViewerOptions(BugCheck,  Disk)),
            new ArrSuite(
                new SonarrSettings(SonarrEnabled, SonarrUrl, SonarrApiKey),
                new RadarrSettings(RadarrEnabled, RadarrUrl, RadarrApiKey),
                new ProwlarrSettings(ProwlarrEnabled, ProwlarrUrl, ProwlarrApiKey),
                new QBitTorrentSettings(QBitTorrentEnabled, QBitTorrentUrl, QBitTorrentUsername, QBitTorrentPassword),
                new BazaarSettings(BazaarEnabled, BazaarUrl, BazaarApiKey),
                new WhisparrSettings(WhisparrEnabled, WhisparrUrl, WhisparrApiKey)
            )
        );

        File.WriteAllText("settings.json", Json.Serialize(updatedSettings));
    }
}